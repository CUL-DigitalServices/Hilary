/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var SearchUtil = require('oae-search/lib/util');

/**
 * General search that searches a 'departments' analyzed field on content, scoping it by user access.
 *
 * In addition to the specific `opts` parameters documented here, there are more generic options available that impact all
 * searches. @see SearchAPI#search for more information.
 *
 * @param  {Context}       ctx                     The context of the current request
 * @param  {Object}        [opts]                  General search options
 * @param  {Function}      callback                Invoked when the process completes
 * @param  {Object}        callback.err            An error that occurred, if any
 * @param  {SearchResult}  callback.results        An object that represents the results of the query
 */
module.exports = function(ctx, opts, callback) {
    // Sanitize custom search options
    opts = opts || {};

    // Because of the low number of departments we need to raise the threshold of our minimum score that documents must match
    opts['minScore'] = 0.5;

    var queryParam = SearchUtil.getQueryParam(opts.q);

    // The query object for the Query DSL
    var query = SearchUtil.createQueryStringQuery(opts.q, ['q_high']);
    var filter = SearchUtil.filterTerm('tenantAlias', ctx.tenant().alias);

    // Wrap the query into the top-level Query DSL "query" object
    return callback(null, SearchUtil.createQuery(query, filter, opts));
};
