/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/**
 * A publication model
 *
 * @param  {String}         id                  The OAE identifier of the publication
 * @param  {String}         tenantAlias         The tenant where the publication was created in
 * @param  {String}         createdBy           The ID of the user that created the publication. Can be `null` when using Symplectic
 * @param  {String}         linkedContentId     The ID of the linked content item
 * @param  {String}         displayName         The title or display name for this publication
 * @param  {String}         publicationType     The format of the publication. (See `PublicationConstants.publicationTypes`)
 * @param  {String}         date                The date when the publication was published
 * @param  {String}         [thumbnailUri]      The url of the thumbnail. (Optional, only available when using Symplectic)
 * @param  {String[]}       authors             A collection of authors. (e.g. ['John Doe', 'u:cam:f1Ede36Fb9', 'Jane Doe', 'u:gt:f1Ede36Fb9'])
 * @param  {String}         publisher           Although the name is slightly ambiguous, this field is intended for Journal Names, Book publishers...
 * @param  {Object}         extra               Object containing extra values
 * @return {Publication}                        Object representing the created publication
 */
var Publication = module.exports.Publication = function(id, tenantAlias, createdBy, linkedContentId, displayName, publicationType, date, thumbnailUri, authors, publisher, extra) {
    var that = {};
    extra = extra || {};
    that.id = id;
    that.tenantAlias = tenantAlias;
    that.createdBy = createdBy;
    that.linkedContentId = linkedContentId;
    that.displayName = displayName;
    that.publicationType = publicationType;
    that.date = date;
    that.thumbnailUri = thumbnailUri;
    that.authors = authors;
    that.publisher = publisher;
    that.openAccessType = extra.openAccessType || null;
    that.issueNumber = extra.issueNumber || null;
    that.pageBegin = extra.pageBegin || null;
    that.pageEnd = extra.pageEnd || null;

    if (id) {
        var hash = id.split(':');
        that.profilePath = '/publications/' + hash[1] + '/' + hash[2];
    }

    return that;
};

/**
 * An ingested publication model
 *
 * @param  {String}                 authorName      The name of the publication author
 * @param  {String[]}               sourceIds       Collection of source ID's
 * @param  {Publication}            publication     Object representing a publication
 * @return {IngesterPublication}                    Object representing an ingested publication
 */
var IngesterPublication = module.exports.IngesterPublication = function(authorName, sourceIds, publication) {
    var that = {};
    that.authorName = authorName;
    that.sourceIds = sourceIds;
    that.publication = publication;
    return that;
};
