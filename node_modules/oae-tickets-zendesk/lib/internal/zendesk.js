/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');
var NodeZendesk = require('node-zendesk');

var Config = require('./config');


/**
 * This module interfaces between the node-zendesk library and our package's
 * configuration to streamline the creation of zendesk api clients from
 * OAE tenant configuration.
 *
 * @api private
 */
var Zendesk = exports.Zendesk = function Zendesk(options) {
    _.bindAll(this, 'zendeskClientFromOAEConfig');

    options = options || {};
    this.config = options.config || Config;
    this.zendesk = options.nodeZendesk || NodeZendesk;
};
_.extend(Zendesk.prototype, {
    'zendeskClientFromOAEConfig': function(ctx) {
        var tenantAlias = ctx.user().tenant.alias;

        var username = this.config.getZendeskEmail(tenantAlias);
        var token = this.config.getZendeskApiToken(tenantAlias);
        var zendeskUrl = this.config.getZendeskUrl(tenantAlias);

        if (username === undefined || token === undefined || zendeskUrl === undefined) {
            return undefined;
        }

        return this.zendesk.createClient({
            username:  username,
            token:     token,
            remoteUri: zendeskUrl
        });
    }
});

// Export all the public methods of the default Zendesk instance
var defaultZendesk = new Zendesk();

/**
 * Gets a `node-zendesk` zendesk client instance, configured by the
 * credentials and subdomain defined in the OAE config.
 *
 * @return  {Object}  A node-zendesk client instance
 */
exports.zendeskClientFromOAEConfig = defaultZendesk.zendeskClientFromOAEConfig;